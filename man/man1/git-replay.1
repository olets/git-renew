.TH "GIT-REPLAY" 1 "September 6 2020" "git-replay 2.1.0" "User Commands"
.SH NAME
git-replay \- automate Git rebases and stage creation
.SH SYNOPSIS

\fBgit replay\fR [\fI<file.(yaml|yml)>\fR] [\fI--back-up\fR] [(\fI--quiet\fR | \fI-q\fR) | (\fI--quieter\fR | \fI-qq\fR)]
[\fI--dry-run\fR]

\fBgit replay\fR [\fI--file <config file path>\fR] [\fI--back-up\fR] [\fI--dry-run\fR] [(\fI--quiet\fR | \fI-q\fR) | (\fI--quieter\fR | \fI-qq\fR)]

\fBgit replay backup-restore\fR [\fI--file <config file path>\fR] [\fI--back-up\fR] [\fI--dry-run\fR] [(\fI--quiet\fR | \fI-q\fR) | (\fI--quieter\fR | \fI-qq\fR)]

\fBgit replay backup-delete\fR [\fI--file <config file path>\fR] [\fI--back-up\fR] [\fI--dry-run\fR] [(\fI--quiet\fR | \fI-q\fR) | (\fI--quieter\fR | \fI-qq\fR)]

\fBgit replay add rebase\fR \fI<upstream> <branch>\fR [\fI--file <config file path>\fR] [\fI--back-up\fR] [\fI--dry-run\fR] [(\fI--quiet\fR | \fI-q\fR) | (\fI--quieter\fR | \fI-qq\fR)]

\fBgit replay add rebase-onto\fR \fI<newbase> <upstream> <branch>\fR [\fI--file <config file path>\fR] [\fI--back-up\fR] [\fI--dry-run\fR] [(\fI--quiet\fR | \fI-q\fR) | (\fI--quieter\fR | \fI-qq\fR)]

\fBgit replay add stage\fR \fI<start point> <upstream> <branch>\fR [\fI--file <config file path>\fR] [\fI--back-up\fR] [\fI--dry-run\fR] [(\fI--quiet\fR | \fI-q\fR) | (\fI--quieter\fR | \fI-qq\fR)]

\fBgit replay delete rebase\fR \fI<upstream>\fR [\fI<branch>\fR] [\fI--file <config file path>\fR] [\fI--back-up\fR] [\fI--dry-run\fR] [(\fI--quiet\fR | \fI-q\fR) | (\fI--quieter\fR | \fI-qq\fR)]

\fBgit replay delete rebase-onto\fR \fI<newbase>\fR [\fI<upstream>\fR [\fI<branch>\fR]] [\fI--file <config file path>\fR] [\fI--back-up\fR] [\fI--dry-run\fR] [(\fI--quiet\fR | \fI-q\fR) | (\fI--quieter\fR | \fI-qq\fR)]

\fBgit replay delete stage\fR \fI<start point>\fR [\fI<upstream>\fR [\fI<branch>\fR]] [\fI--file <config file path>\fR] [\fI--back-up\fR] [\fI--dry-run\fR] [(\fI--quiet\fR | \fI-q\fR) | (\fI--quieter\fR | \fI-qq\fR)]

\fBgit replay\fR (\fBhelp\fR | \fB--help\fR)

\fBgit replay\fR (\fB--version\fR | \fB-v\fR)

.SH DESCRIPTION
\fBgit-replay\fR automate the rebasing of Git branches and creation of
stage branches (ie branches into which one or more feature branch is
merged with a merge commit).

.SH Commands
The following commands are available:

.IP \(bu
\fBgit replay\fR [\fI<file.(yaml|yml)>\fR] [\fI--back-up\fR]
[(\fI--quiet\fR | \fI-q\fR) | (\fI--quieter\fR | \fI-qq\fR)] [\fI--dry-run\fR]

Run the configured automation.

The \fI--file\fR option specifies the path to the configuration file (default is \fIgit-renew.yaml\fR).

The \fI--back-up\fR option saves a copy of every branch. Backup branches are
prefixed with \fIgit-replay/\fR.

The \fI--quiet\fR option passes the `--quiet` flag to Git when applicable.

The \fI--quieter\fR option additionally suppresses most git-replay output.

The \fI--dry-run\fR option logs (unless quieter is set) but does not
run commands.

.IP \(bu
\fBgit replay backup-delete\fR [(\fI--quiet\fR | \fI-q\fR) | (\fI--quieter\fR | \fI-qq\fR)] [\fI--dry-run\fR]

Delete all backup branches. \fIBackup branches are defined as those with the
prefix "git-replay/".\fR If the backed up branch is not found -for example if
there is no branch "x" to go with the backup branch "git-replay/x"- a warning
will be printed and the backup branch will not be deleted.

The \fI--quiet\fR option passes the `--quiet` flag to Git when applicable.

The \fI--quieter\fR option additionally suppresses most git-replay output.

The \fI--dry-run\fR option logs (unless quieter is set) but does not
run commands.

.IP \(bu
\fBgit replay backup-restore\fR [(\fI--quiet\fR | \fI-q\fR) | (\fI--quieter\fR | \fI-qq\fR)] [\fI--dry-run\fR]

Reset every configured branch to its \fBgit-replay/\fR-prefixed backup, and then delete all backups.

For every backup branch, reset the current branch to the backup and then
delete the backup branch. \fIBackup branches are defined as those with the
prefix "git-replay/."\fR If the backed up branch is not found -for example if
there is no branch "x" to go with the backup branch "git-replay/x"- a
warning will be printed and the backup branch will not be deleted.

The \fI--quiet\fR option passes the `--quiet` flag to Git when applicable.

The \fI--quieter\fR option additionally suppresses most git-replay output.

The \fI--dry-run\fR option logs (unless quieter is set) but does not
run commands.

.IP \(bu
\fBgit replay add rebase\fR \fI<upstream> <branch>\fR [\fI--file <config file path>\fR] [\fI--back-up\fR] [\fI--dry-run\fR] [(\fI--quiet\fR | \fI-q\fR) | (\fI--quieter\fR | \fI-qq\fR)]

Adds to the configuration file the configuration for
\fBgit rebase <upstream> <branch>\fR.

.IP \(bu
\fBgit replay add rebase-onto\fR \fI<newbase> <upstream> <branch>\fR [\fI--file <config file path>\fR] [\fI--back-up\fR] [\fI--dry-run\fR] [(\fI--quiet\fR | \fI-q\fR) | (\fI--quieter\fR | \fI-qq\fR)]

Adds to the configuration file the configuration for
\fBgit rebase --onto <newbase> <upstream> <branch>\fR.

.IP \(bu
\fBgit replay add stage\fR \fI<start point> <upstream> <branch>\fR [\fI--file <config file path>\fR] [\fI--back-up\fR] [\fI--dry-run\fR] [(\fI--quiet\fR | \fI-q\fR) | (\fI--quieter\fR | \fI-qq\fR)]

Adds to the configuration file the configuration for
\fBgit switch -C <upstream> <start point> && git merge --no-ff <branch>\fR.

.IP \(bu
\fBgit replay delete rebase\fR \fI<upstream>\fR [\fI<branch>\fR] [\fI--file <config file path>\fR] [\fI--back-up\fR] [\fI--dry-run\fR] [(\fI--quiet\fR | \fI-q\fR) | (\fI--quieter\fR | \fI-qq\fR)]

If \fI<branch>\fR is provided, deletes from the configuration file the configuration for \fBgit rebase <upstream> <branch>\fR.

Otherwise deletes from the configuration file all configured \fBrebase --onto\fRs with the \fBnewbase <newbase>\fR.

.IP \(bu
\fBgit replay delete rebase-onto\fR \fI<newbase>\fR [\fI<upstream>\fR [\fI<branch>\fR]] [\fI--file <config file path>\fR] [\fI--back-up\fR] [\fI--dry-run\fR] [(\fI--quiet\fR | \fI-q\fR) | (\fI--quieter\fR | \fI-qq\fR)]

If \fI<upstream>\fR \fI<branch>\fR is provided, deletes from the configuration file the configuration for \fBgit rebase --onto <newbase> <upstream> <branch>\fR.

If \fI<branch>\fR is not provided, deletes from the configuration file all configured \fBrebase --onto\fR`s with the \fBnewbase <newbase>\fR and
\fBupstream <upstream>\fR.

Otherwise deletes from the configuration file all configured \fBrebase --onto\fRs with the \fBnewbase <newbase>\fR.

.IP \(bu
\fBgit replay delete stage\fR \fI<start point>\fR [\fI<upstream>\fR [\fI<branch>\fR]] [\fI--file <config file path>\fR] [\fI--back-up\fR] [\fI--dry-run\fR] [(\fI--quiet\fR | \fI-q\fR) | (\fI--quieter\fR | \fI-qq\fR)]

If \fI<upstream>\fR \fI<branch>\fR is provided, deletes from the configuration
file the configuration for
\fBgit checkout -B <upstream> <start point> && git merge --no-ff <branch>\fR.

If \fI<branch>\fR is not provided, deletes from the configuration file all
configured "stages" with the "start point" \fB<start point>\fR and
\fBupstream <upstream>\fR.

Otherwise deletes from the configuration file all configured "stages" with the
"start point" \fB<start point>\fR.

.IP \(bu
\fBgit replay\fR (\fBhelp\fR | \fB--help\fR)

Show this document.

.IP \(bu
\fBgit replay\fR (\fB--version\fR | \fB-v\fR)

Show the current version.

.SH Configuration
Configure automation in the YAML configuration file, by default
\fIgit-replay.yaml\fR in the repo root directory.

The following config file automates the following:

git rebase <upstream 1> <branch 1>

git rebase <upstream 1> <branch 2>

git rebase <upstream 2> <branch 3>

git rebase --onto <newbase 1> <upstream 1> <branch 1>

git rebase --onto <newbase 1> <upstream 1> <branch 2>

git rebase --onto <newbase 2> <upstream 2> <branch 3>

git checkout <branch 1>

git reset --hard <start-point 1>

git merge --no-ff <commit 1>

git merge --no-ff <commit 2>

git merge --no-ff <commit 3>

git checkout <branch 2>

git reset --hard <start-point 1>

git merge --no-ff <commit 3>

git checkout <branch 3>

git reset --hard <start-point 2>

git merge --no-ff <commit 4>

.IP \(bu
\fIYAML config file\fR

rebase:

	<upstream 1>:

		- <branch 1>

		- <branch 2>

	<upstream 2>: <branch 3>

	<upstream 4>:

		- <branch 4>

rebase-onto:

	<newbase 1>:

		<upstream 1>:

			- <branch 1>

			- <branch 2>

	<newbase 2>:

		<upstream 2>: <branch 3>

stage:

	<start-point 1>:

		<branch 1>:

			- <commit 1>

			- <commit 2>

			- <commit 3>

		<branch 2>: <commit 2>

	<start-point 2>:

		<branch 3>:

			- <commit 1>

			- <commit 4>

.SH AUTHORS

Henry Bley\-Vroman <olets@olets.dev>
